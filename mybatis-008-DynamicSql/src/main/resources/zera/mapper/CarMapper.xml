<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace先随意写一个-->
<mapper namespace="zera.mapper.CarMapper">
    <select id="selectByMultiCondition" resultType="car">
        select * from t_car where 1=1
        <if test="brand != null and brand.trim() != ''">
            and brand like '%${brand}%'
        </if>
        <if test="price != null">
            and guidePrice > #{price}
        </if>
    </select>

    <select id="selectByMultiConditionWithWhere" resultType="car">
        select * from t_car
        <where>
            <if test="brand != null and brand.trim() != ''">
                brand like '%${brand}%'
            </if>
            <if test="price != null">
                and guidePrice > #{price}
            </if>
        </where>
    </select>

    <select id="selectByMultiConditionWithTrim" resultType="car">
        select * from t_car
        <trim prefix="where" suffixOverrides="and|or">
            <if test="brand != null and brand.trim() != ''">
                brand like '%${brand}%' and
            </if>
            <if test="price != null">
                guidePrice > #{price}
            </if>
        </trim>
    </select>

    <select id="selectByChoose" resultType="car">
        select * from t_car
        <where>
            <choose>
                <when test="brand != null and brand != ''">brand like '%${brand}%'</when>
                 <otherwise>
                     guidePrice > #{price}
                 </otherwise>
            </choose>
        </where>
    </select>

    <update id="updateBySet">
        update t_car
        <set>
            <if test="carNum != null and carNum !=''">carNum = #{carNum},</if>
            <if test="brand != null and brand !=''">brand = #{brand},</if>
            <if test="guidePrice != null and guidePrice != ''">guidePrice = #{guidePrice},</if>
            <if test="produceTime != null and produceTime != ''">produceTime = #{produceTime},</if>
            <if test="carType != null and carType != ''">carType = #{carType},</if>
        </set>
        where id = #{id}
    </update>

    <delete id="deleteBatchByForEach">
        delete from t_car where id in (
            <foreach collection="ids" item="id" separator=",">
                #{id}
            </foreach>
            )
    </delete>

    <insert id="insertBatchByForEach">
        insert into t_car values
              <foreach collection="cars" item="car" separator=",">
                (null,#{car.carNum},#{car.brand},#{car.guidePrice},#{car.produceTime},#{car.carType})
              </foreach>
    </insert>


</mapper>